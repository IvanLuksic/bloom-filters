#define _CRT_SECURE_NO_WARNINGS
#include<iostream>
#include<string>
#include<vector>
#include<fstream>
#include<list>
#include "md5.h"
#include "murmur3_fnv.h"
using namespace std;

class BloomFilter
{
public:
	BloomFilter(int);
	vector<bool> filter;
	int check(string);
	int insert(string);
	int clear();
	int countTrue();
	int setSeed(unsigned int);
protected:
	int velfiltera;
	unsigned int seed;//za murmur
};

int BloomFilter::setSeed(unsigned int s)
{
	seed = s;
	return 0;
}
int BloomFilter::countTrue()
{
	int br = 0;
	for (bool j : filter) if (j == true) br++;
	return br;
}
int BloomFilter::clear()
{
	fill(filter.begin(), filter.end(), 0);
	return 0;
}

int BloomFilter::check(string data)
{
	if ((filter[MuRMuR3(data, seed) % velfiltera] == 1) && (filter[FNV1a(data) % velfiltera] == 1))
	{
		cout << "String '" << data << "' je mozda u setu." << endl;
		return 1;
	}
	else
	{
		cout << "String '" << data << "' sigurno nije u setu." << endl;
		return 0;
	}
}//vraca nulu ako nije, vraca 1 ako je

int BloomFilter::insert(string data)
{
	filter[MuRMuR3(data, seed) % velfiltera] = 1;
	filter[FNV1a(data) % velfiltera] = 1;

	return 0;
}//Vraca nulu nakon sta doda element u set


BloomFilter::BloomFilter(int velicina)
{
	velfiltera = velicina;
	seed = 123;
	filter.resize(velfiltera, 0);
}

ostream& operator<<(ostream &out, BloomFilter &bloom)
{
	for (bool j : bloom.filter) out << " " << j;
	return out;
}

int main()
{
	BloomFilter iko(88500);
	int brojac = 0;
	ifstream unos("data1000.txt");
	ifstream provjera("provjera1500.txt");
	list<string> redci;
	string redak;
	while (unos>>redak) iko.insert(redak);
	cout << iko << endl;
	while (provjera >> redak) if (iko.check(redak) == 1) brojac++;
	cout<<"Imamo " << iko.countTrue() << " jedinica!" << endl;
	cout << "Datoteka 'data1000.txt' sadrzi " <<brojac<< " rijeci iz datoteke 'provjera1500.txt'." << endl;
	system("pause");
	return 0;

}
